<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>且听风吟的blog</title>
    <link>http://hepanchen.github.io/</link>
    <description>Recent content on 且听风吟的blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 15 Nov 2018 18:04:18 +0800</lastBuildDate>
    
	<atom:link href="http://hepanchen.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Golang的id锁实现</title>
      <link>http://hepanchen.github.io/posts/golang%E7%9A%84id%E9%94%81%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Thu, 15 Nov 2018 18:04:18 +0800</pubDate>
      
      <guid>http://hepanchen.github.io/posts/golang%E7%9A%84id%E9%94%81%E5%AE%9E%E7%8E%B0/</guid>
      <description>需求 不同的协程进行分组，只有分组相同的协程需要并发控制。（非原创）
方案1 mutex+cond+map package kmutex import ( &amp;quot;fmt&amp;quot; &amp;quot;sync&amp;quot; ) type KMutex interface { Lock(key interface{}) UnLock(key interface{}) } var empty struct{} /* * map+cond的实现，缺点容易引起goroutine的惊群现象，key比较少， * 等待key的routine比较多时，可能会有性能问题 */ type kMutex struct { l *sync.Mutex //使用指针是因为mutex不能复制，否则起不到锁的效果 cond *sync.Cond mtxMap map[interface{}]struct{} //使用空struct大小为0节约空间 } func NewKmutex() KMutex { l := new(sync.Mutex) return &amp;amp;kMutex{l: l, cond:sync.NewCond(l), mtxMap:make(map[interface{}]struct{}),} } func(k kMutex)locked(key interface{}) (ok bool){ _, ok = k.mtxMap[key] return } func (k kMutex)Lock(key interface{}) { k.</description>
    </item>
    
    <item>
      <title>Github pages &#43;  Hugo配置</title>
      <link>http://hepanchen.github.io/posts/hugo%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Wed, 07 Nov 2018 16:35:24 +0800</pubDate>
      
      <guid>http://hepanchen.github.io/posts/hugo%E9%85%8D%E7%BD%AE/</guid>
      <description> Github pages 配置  创建以用户名开头+.github.io的项目   Hugo 配置  hugo 入门
 hugo quick start  hugo github pages 整合
 integrating github pages and hugo   trouble shooting  hugo 未发布pags的问题
hugo --cleanDestinationDir -c content -v -D 构建web  hugo 图片放置路径和相对路径不顺手的问题
使用 hugo-image 插件解决  apm deploy插件的问题
git remote set-url https://&amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;@github.com/&amp;lt;username&amp;gt;/&amp;lt;repo_name&amp;gt;.git git config --global credential.helper wincred apm publish 0.0.0   </description>
    </item>
    
  </channel>
</rss>